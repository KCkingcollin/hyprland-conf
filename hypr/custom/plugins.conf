# load plugins
# plugin = /usr/lib/libhy3.so
# plugin = /usr/lib/hyprland-plugins/hyprbars.so

plugin {
    hyprbars {
# list of vars https://github.com/hyprwm/hyprland-plugins/tree/main/hyprbars
    }
    hy3 {
# disable gaps when only one window is onscreen
# 0 - always show gaps
# 1 - hide gaps with a single window onscreen
# 2 - 1 but also show the window border
## no_gaps_when_only = <int> # default: 0

# policy controlling what happens when a node is removed from a group,
# leaving only a group
# 0 = remove the nested group
# 1 = keep the nested group
# 2 = keep the nested group only if its parent is a tab group
        node_collapse_policy = 0 # default: 2

# offset from group split direction when only one window is in a group
## group_inset = <int> # default: 10

# if a tab group will automatically be created for the first window spawned in a workspace
## tab_first_window = <bool>

# tab group settings
            tabs {
            }

# autotiling settings
        autotile {
# enable autotile
            enable = true # default: false

# make autotile-created groups ephemeral
# ephemeral_groups = <bool> # default: true

# if a window would be squished smaller than this width, a vertical split will be created
# -1 = never automatically split vertically
# 0 = always automatically split vertically
# <number> = pixel height to split at
                trigger_width = -1 # default: 0

# if a window would be squished smaller than this height, a horizontal split will be created
# -1 = never automatically split horizontally
# 0 = always automatically split horizontally
# <number> = pixel height to split at
                trigger_height = 0 # default: 0

# a space or comma separated list of workspace ids where autotile should be enabled
# it's possible to create an exception rule by prefixing the definition with "not:"
# workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
# workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
# workspaces = <string> # default: all
        }
    }    
    overview {
        exitOnClick = true
        exitOnSwitch = true
    }
}
